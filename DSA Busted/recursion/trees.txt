// 1. Check if they are mirror tree or not

bool checkIsMirror(Node* root1, Node* root2){

    // base case
    if(root1 == NULL && root2 == NULL)
        return true;
    if(root1->data == NULL && root2->data != NULL)
        return false;
    if(root1->data != NULL && root2->data == NULL)
        return false;
    if(root1->data != root2->data)
        return false;

    bool op1 = checkIsMirror(root1->left, root2->right);
    bool op2 = checkIsMirror(root1->right, root2->left);
    bool finalAns = op1 && op2;

    return finalAns;
}


// 2. Height of tree

int height(Node *root){
    if(root == NULL)
        return 0;

    int left = height(root->left);
    int right = height(root->right);

    return 1 + max(left, right);
}