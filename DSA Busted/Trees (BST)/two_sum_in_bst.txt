void inorder(Node *root, vector<int> &in){
    if(root == NULL)
        return;
    inorder(root->left, in);
    in.push_back(root->data);
    inorder(root->left, in);
}

bool twoSumInBST(Node *root, int target){
    vector<int> inorderVal;
    inorder(root, inorderVal); // stored inorder sorted values

    // use two pointer approach to check whether pair exists or not
    int i = 0, j = inorderVal.size()-1;
    while(i<j){
        int sum = inorderVal[i] + inorderVal[j];
        if(sum == target)
            return true;
        else if(sum > target)   
            j--;
        else
            i++;
    }

    return false;
}

// you have been given a bst and a target value. You need to find out whether there exists
// a pair of node values in bst such that their sum is equal to target value