bool uniqueOccurrences(vector<int>& arr) {
        unordered_map<int,int>m;
        for(int i=0;i<arr.size();i++)
        {
            m[arr[i]]++;

        }
        unordered_set<int>n;
        for(int i=0;i<arr.size();i++)
        {
            n.insert(m[arr[i]]);

        }
        if(m.size()==n.size())
        {
            return true;
        }
      return false;  
        
}



bool uniqueOccurrences(vector<int> &arr)
{
    unordered_map<int, int> mp;

    for (auto i : arr)
    {
        mp[i]++;
    }
    vector<int> ans;
    for (auto i : mp)
    {
        ans.push_back(i.second);
    }
    sort(ans.begin(), ans.end());
    // list of occurences to check no two values has same occurences
    for (int i = 1; i < ans.size(); i++)
    {
        if (ans[i] == ans[i - 1])
        {
            return false;
        }
    }
    return true;
}

Input: arr = [1,2,2,1,1,3]
Output: true
Explanation: The value 1 has 3 occurrences, 2 has 2 and 3 has 1. No two values have the same number of occurrences.
